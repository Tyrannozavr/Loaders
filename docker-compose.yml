version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    command: gunicorn app.wsgi:application --bind 0.0.0.0:8000
    env_file:
      - .env
    volumes:
      - ./backend/media:/usr/src/app/media
      - ./backend/staticfiles:/usr/src/app/staticfiles
      - ./backend/collected_static:/usr/src/app/collected_static
      - ./backend/db.sqlite3:/usr/src/app/db.sqlite3
      - ./backend/logs:/usr/src/app/logs
    environment:
      - REDIS=redis
    expose:
      - "8000"
    depends_on:
      - db

  nginx:
    build: ./nginx
    ports:
      - "80:80"
    volumes:
      - ./backend/media:/media
      - ./backend/staticfiles:/staticfiles
      - ./backend/collected_static:/collected_static
      - ./backend/logs:/logs
      - ./backend/partners_lending:/partners_lending
    depends_on:
      - backend
      - frontend

  frontend:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    env_file:
      - ./frontend/.env
    container_name: frontend
    restart: always
    expose:
      - "3000"

  db:
    image: postgres:latest
    container_name: postgres_container
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - ./pgdata:/var/lib/postgresql/data/pgdata
    networks:
      - db

networks:
  backend:
    driver: bridge
  db:
    driver: bridge